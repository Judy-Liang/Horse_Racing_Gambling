load("data2015.RData")
load("data2016.RData")
load("data2017.RData")
load("data2018.RData")
Train1 <- data2014
Train2 <- data2015
Train3 <- data2016
Train4 <- data2017
Test1 <- data2018
}
require(data.table)
require(fpp3)
View(data2014)
Csum <- Test1 %>% mutate(Csum=WIN_POOL.y-WIN_POOL.x) %>% pull(Csum)
Train1$WIN_TIME.y[0]
Train1$WIN_TIME.y
Train1$WIN_TIME.y[1]
yearmonth(Train1$WIN_TIME.y[1])
as.Date(as.character(Train1$WIN_TIME.y[1]),format = "%Y%m%d")
d = as.Date(as.character(Train1$WIN_TIME.y[1]),format = "%Y%m%d")
yearmonth(d)
# transform data from irregular-spaced ts to regular-spaced ts
# the new interval is month
Train1["Month"] <- as.Date(as.character(Train1$WIN_TIME.y),format = "%Y%m%d")
Train1
View(Train1)
Train1 %>%
mutate(Month = yearmonth(Month))
View(Train1)
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID)
train1
View(train1)
View(Train1)
Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(WIN_POOL.x = mean(WIN_POOL.x))
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(WIN_POOL.x = mean(WIN_POOL.x), WIN_POOL.y = mean(WIN_POOL.y))
View(train1)
View(train1)
View(Train2)
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(everything(), mean, na.rm=TRUE))
rownames(Train1)
colnames(Train1)
col_name <- colnames(Train1)
want <- col_name[c(-1, -62, -63, -64)]
want
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(want, mean, na.rm=TRUE))
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(c('WIN_POOL.x'), na.rm=TRUE))
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(c(WIN_POOL.x), na.rm=TRUE))
library(dplyr)
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(c(WIN_POOL.x), na.rm=TRUE))
train1
View(train1)
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
Train2["Month"] <- as.Date(as.character(Train2$WIN_TIME.y),format = "%Y%m%d")
train2 <- Train2 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
Train3["Month"] <- as.Date(as.character(Train3$WIN_TIME.y),format = "%Y%m%d")
train3 <- Train3 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
Train4["Month"] <- as.Date(as.character(Train4$WIN_TIME.y),format = "%Y%m%d")
train4 <- Train4 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
View(train3)
View(train2)
View(train4)
train = rbind(train1, train2, train3, train4)
train = bind_rows(train1, train2, train3, train4)
train
View(train)
View(train)
View(train1)
View(train2)
# plot the data
train %>%
autoplot(Csum) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# Seasonal plots
train %>%
gg_season(Csum, labels = "both") +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
View(train1)
View(train2)
View(train1)
("2015 Aug", rep(0, 61))
c(("2015 Aug", rep(0, 61)))
c("2015 Aug", rep(0, 61))
as.Data("2015 Aug")
as.Date("2015 Aug")
as.Date("201508", format = "%Y%m")
as.Date("20158", format = "%Y%m")
as.Date(as.character("20150801"),format = "%Y%m%d")
yearmonth("2015 Aug")
blank = c(yearmonth("2015 Aug"), rep(0, 61))
blank = c("2015 Aug", rep(0, 61))
train1 <- bind_rows(train1, blank)
View(Train1)
train1 %>%
add_row(Month = yearmonth("2015 Aug"), WIN_POOL.x:Csum = rep(0, 61))
train1 %>%
add_row(Month = yearmonth("2015 Aug"))
train1[is.na(train1)] <- 0
View(train1)
train1 <- train1 %>%
add_row(Month = yearmonth("2015 Aug"))
train1[is.na(train1)] <- 0
View(train1)
train2 <- train2 %>%
add_row(Month = yearmonth("2016 Aug"))
train2[is.na(train1)] <- 0
View(train2)
train2[is.na(train2)] <- 0
View(Train1)
train3 <- train3 %>%
add_row(Month = yearmonth("2017 Aug"))
train3[is.na(train3)] <- 0
View(train3)
train4 <- train4 %>%
add_row(Month = yearmonth("2018 Aug"))
train4[is.na(train4)] <- 0
View(train4)
train = bind_rows(train1, train2, train3, train4)
# Time plots
train %>%
autoplot(Csum) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# Seasonal plots
train %>%
gg_season(Csum, labels = "both") +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# Seasonal subseries plot
train %>%
gg_subseries(Csum) +
labs(y = "Csum ($)", title = "Seasonal plot: Sum of other parties' bet at time we bet")
# Lag plot
train %>%
gg_lag(Csum, geom = "point") +
labs(x = "lag(Csum, k)")
# Autocorrelation
train %>%
ACF(Csum) %>%
autoplot() + labs(title="Sum of other parties' bet at time we bet")
# Autocorrelation
train %>%
ACF(Csum, lag_max = 48) %>%
autoplot() + labs(title="Sum of other parties' bet at time we bet")
dcmp <- train %>%
model(stl = STL(Csum))
components(dcmp) %>% autoplot()
# seasonal adjusted data
components(dcmp) %>%
as_tsibble() %>%
autoplot(Csum, colour = "gray") +
geom_line(aes(y=season_adjust), colour = "#0072B2") +
labs(y = "Csum ($)",
title = "Sum of other parties' bet at time we bet")
# ================== Time Series Decomposition ==================
# STL: Seasonal and Trend decomposition using Loess
dcmp <- train %>%
model(
STL(Csum ~ trend(window = 21) +
season(window = "periodic"),
robust = TRUE))
components(dcmp) %>% autoplot()
# seasonal adjusted data
components(dcmp) %>%
as_tsibble() %>%
autoplot(Csum, colour = "gray") +
geom_line(aes(y=season_adjust), colour = "#0072B2") +
labs(y = "Csum ($)",
title = "Sum of other parties' bet at time we bet")
# ================== Time Series Decomposition ==================
# STL: Seasonal and Trend decomposition using Loess
dcmp <- train %>%
model(
STL(stl = Csum ~ trend(window = 21) +
season(window = "periodic"),
robust = TRUE))
# ================== Time Series Decomposition ==================
# STL: Seasonal and Trend decomposition using Loess
dcmp <- train %>%
model(
stl = STL(Csum ~ trend(window = 21) +
season(window = "periodic"),
robust = TRUE))
aug <- dcmp %>% augment()
aug
aug <- dcmp %>% augment()
aug %>%
ACF(.innov) %>%
autoplot() +
labs(title = "Residuals from the STL method")
aug %>%
ggplot(aes(x = .innov)) +
geom_histogram() +
labs(title = "Histogram of residuals")
dcmp %>% gg_tsresiduals()
dcmp %>% gg_tsresiduals()
dcmp %>% gg_tsresiduals() +
labs(title = "Residuals' plots from the STL method")
# ================== Fit the model ==================
train %>%
features(Csum, unitroot_nsdiffs)
# nsdiffs:1 -> one seasonal difference is required
train %>%
mutate(diff_Csum = difference(Csum, 12)) %>%
features(dff_Csum, unitroot_ndiffs)
train
# nsdiffs:1 -> one seasonal difference is required
train %>%
mutate(diff_Csum = difference(Csum, 12)) %>%
features(diff_Csum, unitroot_ndiffs)
## ARIMA
fit <- train %>%
model(ARIMA(Exports))
## ARIMA
fit <- train %>%
model(ARIMA(Csum))
report(fit)
fit %>%
forecast(h=11) %>%
autoplot(Csum) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fit %>%
forecast(h=11) %>%
autoplot(train) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# ACF & PACF plots
train %>%
gg_tsdisplay(Csum, plot_type = "partial")
train
train %>%
gg_tsdisplay(Csum, plot_type = "partial", lag_max = 48) +
labs(title = "ACF & PACF plots")
# ================== Test the model ==================
Test1["Month"] <- as.Date(as.character(Test1$WIN_TIME.y),format = "%Y%m%d")
test <- Test1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
fit %>%
forecast(h=11) %>%
autoplot(train) +
geom_line(test)
fit %>%
forecast(h=11) %>%
autoplot(train) +
geom_line(test) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fit %>%
forecast(h=11) %>%
autoplot(bind_rows(train, test)) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
## ARIMA
fit <- train %>%
model(ARIMA(Csum ~ pdq(12,0,0)))
report(fit)
## ARIMA
fit <- train %>%
model(ARIMA(Csum))
report(fit)
train %>%
gg_tsdisplay(difference(Csum, 12),
plot_type='partial', lag_max = 48)
train %>%
gg_tsdisplay(difference(Csum, 12),
plot_type='partial', lag_max = 48) +
labs(title = "Seasonally differenced Csum")
fit %>% gg_tsresiduals(lag_max=36)
fit %>%
forecast(h=11) %>%
autoplot(train) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
dcmp %>%
forecast(h=11) %>%
autoplot(train) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fit %>%
forecast(h=11)
View(Test1)
Test1["Month"] <- yearmonth(Test1$Month)
View(Test1)
fct <- fit %>%
forecast(h=11)
View(fct)
fct <- fit %>%
forecast(h=11) %>%
select(Month, .mean)
fit %>%
forecast(h=11) %>%
autoplot(bind_rows(train, test)) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fct <- fit %>%
forecast(h=11) %>%
select(Month, .mean)
fit
fct <- fit %>%
forecast(h=11) %>%
select(-.model)
fct
fct <- fit %>%
forecast(h=11) %>%
select(c(Month, .mean))
fct <- fit %>%
forecast(h=11) %>%
select(-.model)
Test1 %>%
left_join(fct, by = Month)
Test1
Csum_est %>%
Test1 %>%
left_join(fct, by = "Month") %>%
pull(.mean)
Csum_est <- Test1 %>%
left_join(fct, by = "Month") %>%
pull(.mean)
MSE <- mean((Csum_est-Csum)^2)
MSE
knitr::opts_chunk$set(echo = TRUE)
require(data.table)
require(fpp3)
Grading <- FALSE
if (Grading==TRUE){
load("data2015.RData")
load("data2016.RData")
load("data2017.RData")
load("data2018.RData")
load("data2019.RData")
Train1 <- data2015
Train2 <- data2016
Train3 <- data2017
Train4 <- data2018
Test1 <- data2019
} else {
load("data2014.RData")
load("data2015.RData")
load("data2016.RData")
load("data2017.RData")
load("data2018.RData")
Train1 <- data2014
Train2 <- data2015
Train3 <- data2016
Train4 <- data2017
Test1 <- data2018
}
Train1["Month"] <- as.Date(as.character(Train1$WIN_TIME.y),format = "%Y%m%d")
train1 <- Train1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
# add August into data to bridge the gap in time
train1 <- train1 %>%
add_row(Month = yearmonth("2015 Aug"))
train1[is.na(train1)] <- 0
Train2["Month"] <- as.Date(as.character(Train2$WIN_TIME.y),format = "%Y%m%d")
train2 <- Train2 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
train2 <- train2 %>%
add_row(Month = yearmonth("2016 Aug"))
train2[is.na(train2)] <- 0
Train3["Month"] <- as.Date(as.character(Train3$WIN_TIME.y),format = "%Y%m%d")
train3 <- Train3 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
train3 <- train3 %>%
add_row(Month = yearmonth("2017 Aug"))
train3[is.na(train3)] <- 0
Train4["Month"] <- as.Date(as.character(Train4$WIN_TIME.y),format = "%Y%m%d")
train4 <- Train4 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
train4 <- train4 %>%
add_row(Month = yearmonth("2018 Aug"))
train4[is.na(train4)] <- 0
train = bind_rows(train1, train2, train3, train4)
# Time plot
train %>%
autoplot(Csum) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# Time plot
train %>%
autoplot(Csum) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
# Seasonal plot
train %>%
gg_season(Csum, labels = "both") +
labs(y = "Csum ($)", title = "Seasonal plot: Sum of other parties' bet at time we bet")
# Seasonal subseries plot
train %>%
gg_subseries(Csum) +
labs(y = "Csum ($)", title = "Seasonal subseries plot: Sum of other parties' bet at time we bet")
# Lag plot
train %>%
gg_lag(Csum, geom = "point") +
labs(x = "lag(Csum, k)")
# Autocorrelation
train %>%
ACF(Csum, lag_max = 48) %>%
autoplot() + labs(title="Sum of other parties' bet at time we bet")
# Autocorrelation
train %>%
ACF(Csum, lag_max = 48) %>%
autoplot() + labs(title="Sum of other parties' bet at time we bet")
# STL: Seasonal and Trend decomposition using Loess
dcmp <- train %>%
model(
stl = STL(Csum ~ trend(window = 21) +
season(window = "periodic"),
robust = TRUE))
components(dcmp) %>% autoplot()
dcmp %>% gg_tsresiduals() +
labs(title = "Residuals' plots from the STL method")
# seasonal adjusted data
components(dcmp) %>%
as_tsibble() %>%
autoplot(Csum, colour = "gray") +
geom_line(aes(y=season_adjust), colour = "#0072B2") +
labs(y = "Csum ($)",
title = "Sum of other parties' bet at time we bet")
accuracy(fit)
## ARIMA
fit <- train %>%
model(ARIMA(Csum))
report(fit)
fit %>% gg_tsresiduals(lag_max=48)
accuracy(fit)
# ACF & PACF plots
train %>%
gg_tsdisplay(Csum, plot_type = "partial", lag_max = 48) +
labs(title = "ACF & PACF plots")
Test1["Month"] <- as.Date(as.character(Test1$WIN_TIME.y),format = "%Y%m%d")
test <- Test1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
fit %>%
forecast(h=11) %>%
autoplot(bind_rows(train, test)) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fct <- fit %>%
forecast(h=11) %>%
select(-.model)
Test1["Month"] <- yearmonth(Test1$Month)
Csum <- Test1 %>% mutate(Csum=WIN_POOL.y-WIN_POOL.x) %>% pull(Csum)
Csum_est <- Test1 %>%
left_join(fct, by = "Month") %>%
pull(.mean)
MSE <- mean((Csum_est-Csum)^2)
Test1["Month"] <- as.Date(as.character(Test1$WIN_TIME.y),format = "%Y%m%d")
test <- Test1 %>%
mutate(Month = yearmonth(Month)) %>%
tsibble(index = Month, key = ID) %>%
summarise(across(WIN_POOL.x:WIN_MODEL_14.y, mean)) %>%
mutate(Csum = WIN_POOL.y - WIN_POOL.x)
fit %>%
forecast(h=11) %>%
autoplot(bind_rows(train, test)) +
labs(y = "Csum ($)", title = "Sum of other parties' bet at time we bet")
fct <- fit %>%
forecast(h=11) %>%
select(-.model)
Test1["Month"] <- yearmonth(Test1$Month)
Csum <- Test1 %>% mutate(Csum=WIN_POOL.y-WIN_POOL.x) %>% pull(Csum)
Csum_est <- Test1 %>%
left_join(fct, by = "Month") %>%
pull(.mean)
MSE <- mean((Csum_est-Csum)^2)
MSE
